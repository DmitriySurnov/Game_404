{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0432\\u0435\\u0431-\\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0439 \\u0441 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\u043C Angular \\u0438 React\\\\Git\\\\Game_404\\\\src\\\\Cell.js\";\nimport Bird from \"./Bird\";\nimport PlayerDragon from \"./PlayerDragon\";\nimport Tree from \"./Tree\";\nimport NullCell from \"./NullCell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cell({\n  roadConten\n}) {\n  let result = [/*#__PURE__*/_jsxDEV(PlayerDragon, {}, \"PlayerDragon_0\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 19\n  }, this)];\n  roadConten.forEach((elementRoad, index) => {\n    switch (elementRoad) {\n      case 1:\n        {\n          result.push( /*#__PURE__*/_jsxDEV(Bird, {}, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 29\n          }, this));\n          break;\n        }\n      case 2:\n        {\n          result.push( /*#__PURE__*/_jsxDEV(Tree, {}, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 29\n          }, this));\n          break;\n        }\n      default:\n        {\n          result.push( /*#__PURE__*/_jsxDEV(NullCell, {}, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 29\n          }, this));\n          break;\n        }\n    }\n  });\n  return result;\n}\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["Bird","PlayerDragon","Tree","NullCell","jsxDEV","_jsxDEV","Cell","roadConten","result","fileName","_jsxFileName","lineNumber","columnNumber","forEach","elementRoad","index","push","_c","$RefreshReg$"],"sources":["D:/Создание веб-приложений с использованием Angular и React/Git/Game_404/src/Cell.js"],"sourcesContent":["import Bird from \"./Bird\";\r\nimport PlayerDragon from \"./PlayerDragon\";\r\nimport Tree from \"./Tree\";\r\nimport NullCell from \"./NullCell\";\r\nfunction Cell({roadConten}){\r\n    let  result =[<PlayerDragon key = \"PlayerDragon_0\"></PlayerDragon>]\r\n    roadConten.forEach((elementRoad, index) =>{\r\n        switch (elementRoad){\r\n            case 1: {\r\n                result.push(<Bird key = {index} ></Bird>)\r\n                break\r\n            }\r\n            case 2:{\r\n                result.push(<Tree key = {index}></Tree>)\r\n                break\r\n            }\r\n            default:{\r\n                result.push(<NullCell key = {index}></NullCell>)\r\n                break\r\n            }\r\n\r\n        }})\r\n    return  result\r\n}\r\nexport default Cell"],"mappings":";AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,SAASC,IAAIA,CAAC;EAACC;AAAU,CAAC,EAAC;EACvB,IAAKC,MAAM,GAAE,cAACH,OAAA,CAACJ,YAAY,MAAO,gBAAgB;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAe,CAAC,CAAC;EACnEL,UAAU,CAACM,OAAO,CAAC,CAACC,WAAW,EAAEC,KAAK,KAAI;IACtC,QAAQD,WAAW;MACf,KAAK,CAAC;QAAE;UACJN,MAAM,CAACQ,IAAI,eAACX,OAAA,CAACL,IAAI,MAAQe,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,CAAC;UACzC;QACJ;MACA,KAAK,CAAC;QAAC;UACHJ,MAAM,CAACQ,IAAI,eAACX,OAAA,CAACH,IAAI,MAAQa,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,CAAC;UACxC;QACJ;MACA;QAAQ;UACJJ,MAAM,CAACQ,IAAI,eAACX,OAAA,CAACF,QAAQ,MAAQY,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,CAAC;UAChD;QACJ;IAEJ;EAAC,CAAC,CAAC;EACP,OAAQJ,MAAM;AAClB;AAACS,EAAA,GAnBQX,IAAI;AAoBb,eAAeA,IAAI;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}