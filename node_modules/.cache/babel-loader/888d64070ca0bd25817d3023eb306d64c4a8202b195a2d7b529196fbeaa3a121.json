{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0432\\u0435\\u0431-\\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0439 \\u0441 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\u043C Angular \\u0438 React\\\\Git\\\\Game_404\\\\src\\\\Row.js\";\nimport Cell from \"./Cell\";\nimport MoveRoad from \"./MoveRoad\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Row({\n  rowRoadConten,\n  GetTdSizeAction,\n  timeOut\n}) {\n  let result = [];\n  rowRoadConten.forEach((elementRow, index) => {\n    if (index === 0) {\n      result.push( /*#__PURE__*/_jsxDEV(Cell, {\n        elementCell: elementRow,\n        GetTdSizeAction: GetTdSizeAction,\n        timeOut: timeOut\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 25\n      }, this));\n    } else {\n      result.push( /*#__PURE__*/_jsxDEV(Cell, {\n        elementCell: elementRow\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }, this));\n    }\n  });\n  return result;\n}\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["Cell","MoveRoad","jsxDEV","_jsxDEV","Row","rowRoadConten","GetTdSizeAction","timeOut","result","forEach","elementRow","index","push","elementCell","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Создание веб-приложений с использованием Angular и React/Git/Game_404/src/Row.js"],"sourcesContent":["import Cell from \"./Cell\";\r\nimport MoveRoad from \"./MoveRoad\";\r\n\r\n\r\nfunction Row({rowRoadConten, GetTdSizeAction, timeOut}){\r\n    let result =[]\r\n\r\n    rowRoadConten.forEach((elementRow,index) =>{\r\n        if (index === 0){\r\n            result.push(<Cell key={index} elementCell={elementRow} GetTdSizeAction={GetTdSizeAction} timeOut={timeOut}></Cell>)\r\n        }\r\n        else {\r\n            result.push(<Cell key={index} elementCell={elementRow}></Cell>)\r\n        }\r\n    })\r\n\r\n    return result\r\n}\r\n\r\nexport default Row"],"mappings":";AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,SAASC,GAAGA,CAAC;EAACC,aAAa;EAAEC,eAAe;EAAEC;AAAO,CAAC,EAAC;EACnD,IAAIC,MAAM,GAAE,EAAE;EAEdH,aAAa,CAACI,OAAO,CAAC,CAACC,UAAU,EAACC,KAAK,KAAI;IACvC,IAAIA,KAAK,KAAK,CAAC,EAAC;MACZH,MAAM,CAACI,IAAI,eAACT,OAAA,CAACH,IAAI;QAAaa,WAAW,EAAEH,UAAW;QAACJ,eAAe,EAAEA,eAAgB;QAACC,OAAO,EAAEA;MAAQ,GAAnFI,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqF,CAAC,CAAC;IACvH,CAAC,MACI;MACDT,MAAM,CAACI,IAAI,eAACT,OAAA,CAACH,IAAI;QAAaa,WAAW,EAAEH;MAAW,GAA/BC,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiC,CAAC,CAAC;IACnE;EACJ,CAAC,CAAC;EAEF,OAAOT,MAAM;AACjB;AAACU,EAAA,GAbQd,GAAG;AAeZ,eAAeA,GAAG;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}